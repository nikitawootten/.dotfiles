---
- name: Ensure jmespath is installed
  package:
    name: python-jmespath
    state: present
  become: yes
- name: Find dotfiles
  find:
    paths:
      # find dotfiles in folder called by parent role
      - "{{ ansible_parent_role_paths[0] }}/{{ dotfiles_src }}"
    recurse: yes
    hidden: yes
  register: find
- name: Create dotfiles directories
  file:
    path: "{{ dotfiles_dest }}/{{ item | regex_replace('(^' + ansible_parent_role_paths[0] + '/' + dotfiles_src + '/)(?P<dir>.*/)(.*$)', '\\g<dir>') }}"
    state: directory
  # This is a multistep filter:
  # 1. From the found files, extract the path of each file using a json query
  # 2. Search for files that have a subdirectory
  # 3. Select only matches that return a string (non-matches return a None)
  # 4. Select only unique matches
  with_items: "{{ find.files | json_query('[].path') | map('regex_search', '^' + ansible_parent_role_paths[0] + '/' + dotfiles_src + '/.*/') | select('string') | list | unique }}"
- name: Symlink dotfiles
  file:
    src: "{{ item.path }}"
    # Remove path before {{ ansible_parent_role_paths[0] }}/{{ dotfiles_src }}
    path: "{{ dotfiles_dest }}/{{ item.path | regex_replace('(^' + ansible_parent_role_paths[0] + '/' + dotfiles_src + '/)(.*)', '\\g<2>') }}"
    state: link
  with_items: "{{ find.files }}"