{ pkgs, config, ... }: let
  pinentry = {
    package = pkgs.pinentry-gnome;
    name = "gnome3";
  };
  keyId = {
    auth = "7ACE37A0932D3D4D950BEAFF3159F9848A1C33FF";
    encrypt = "415DB258900BA323991FDD97864235D26A0BA85C";
    sign = "916363FC4E9384AF585836DEC171225E0A2F6B8C";
  };
  pkText = ''
-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: Hostname: 
Version: Hockeypuck 2.1.0-162-gff07af0

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
KBKTmrHu
=wXNW
-----END PGP PUBLIC KEY BLOCK-----
'';
in {
  home.packages = [ pinentry.package ];

  services.gpg-agent = {
    enable = true;
    enableSshSupport = true;
    sshKeys = [ keyId.auth ];
    pinentryFlavor = pinentry.name;
    enableExtraSocket = true;
  };

  programs.bash = {
    enable = true;
    profileExtra = "gpgconf --launch gpg-agent";
    bashrcExtra = "export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)";
  };

  programs.gpg = {
    enable = true;
    publicKeys = [
      {
        text = pkText;
        trust = 5;
      }
    ];
  };

  programs.git = {
    signing = {
      key = keyId.sign;
      signByDefault = true;
      # gpgPath = "${pkgs.gnupg}/bin/gpg";
    };
  };
}
